#!/bin/sh

# Start and stop openlava daemons
# Run by hand or install in /etc/init.d
# and make a symbolic link from rc3.d to it.
#
# The following is for the Linux chkconfig utlility
# chkconfig: 35 99 01
# description: openlava

### BEGIN INIT INFO
# Provides: openlava
# Required-Start: $local_fs $remote_fs $network $syslog 
# Required-Stop: $local_fs $remote_fs $syslog $network
# Default-Start:  3 4 5
# Default-Stop: 0 1 6
# Short-Description: openlava
# Description: openlava is a distributed batch system
### END INIT INFO

# This is the root of openlava installation
# change it if installed somewhere else.
OPENLAVA_TOP=@prefix@
export OPENLAVA_TOP

# kill the old daemons first.
#
kill_daemons()
{
    killall -q lim res sbatchd  mbatchd
}

# Restart is just like start since in both
# cases previously running daemons are 
# killed.
opcode="$1"
if [ "$opcode" = "restart" ]
then 
   opcode="start"
   echo "Stopping daemons..."
fi

# Process the requested operation.
case "$opcode" in
  'stop')
        echo "Stopping daemons..."
        kill_daemons
        exit 0
        ;;

  'start')
        LSF_CONF=$OPENLAVA_TOP/etc/lsf.conf

        if [ -f $LSF_CONF ]
        then
            kill_daemons

            # Get the location of the openlava daemons
            . $LSF_CONF

            # Export this env.variable to notify openlava daemons the loc. of
            # lsf.conf

            ID=`id -u`

            # Some checks on LSF_ENVDIR and LSF_SERVERDIR
            if [ ! -x "$LSF_ENVDIR" ]; then
              echo "LSF_ENVDIR=$LSF_ENVDIR unaccessible by user $ID"
              exit 1
            fi
            if [ -x "$LSF_SERVERDIR/lim" -a -x "$LSF_SERVERDIR/res" -a -x "$LSF_SERVERDIR/sbatchd" ]; then
              export LSF_ENVDIR
              export LSF_SERVERDIR
            else
              echo "user $ID cannot execute daemons under $LSF_SERVERDIR"
              exit 1
            fi

            echo "Starting daemons..."

            if [ "$ID" != 0 ]; then
            # single user mode use this
            # to run test clusters
               $LSF_SERVERDIR/lim -1               
               if [ $? -eq 0 ]; then
                 echo "lim -1 started"
               else 
                 echo "lim -1 startup failed"
               fi
               $LSF_SERVERDIR/res -1
               if [ $? -eq 0 ]; then
                 echo "res -1 started"
               else
                 echo "res -1 startup failed"
               fi
               $LSF_SERVERDIR/sbatchd -1
               if [ $? -eq 0 ]; then
                 echo "sbatchd -1 started"
               else
                 echo "sbatchd -1 startup failed"
               fi
            else
               # multi user mode
               $LSF_SERVERDIR/lim
               if [ $? -eq 0 ]; then
                 echo "lim started"
               else
                 echo "lim startup failed"
               fi
               $LSF_SERVERDIR/res
               if [ $? -eq 0 ]; then
                 echo "res started"
               else
                 echo "res startup failed"
               fi
               $LSF_SERVERDIR/sbatchd
               if [ $? -eq 0 ]; then
                 echo "sbatchd started"
               else
                 echo "sbatchd startup failed"
               fi
            fi
            exit 0
        fi
        echo "$LSF_CONF: no such file or directory"
        exit 1
        ;;
  'status')
        OPENLAVA_DAEMONS=`(ps -ef; ps auxww) 2>/dev/null | grep "$LSF_SERVERDIR"`
        PID=`echo "${OPENLAVA_DAEMONS}" | sed '/\/lim$\|lim -1$/!d;s/^[^ ]* *\([0-9]*\).*/\1/;q'`
        echo "lim pid: <$PID>"
        PID=`echo "${OPENLAVA_DAEMONS}" | sed '/\/res$\|res -1$/!d;s/^[^ ]* *\([0-9]*\).*/\1/;q'`
        echo "res pid: <$PID>"
        PID=`echo "${OPENLAVA_DAEMONS}" | sed '/\/sbatchd$\|sbatchd -1$/!d;s/^[^ ]* *\([0-9]*\).*/\1/;q'`
        echo "sbatchd pid: <$PID>"
        PID=`echo "${OPENLAVA_DAEMONS}" | sed '/\/mbatchd /!d;s/^[^ ]* *\([0-9]*\).*/\1/;q'`
        echo "mbatchd pid: <$PID>"
        exit 0
        ;;
  *)
        echo "Script for starting up and shutting down openlava"
        echo "Usage: $0 { start | stop | status | restart }"
        exit 0
        ;;
esac

